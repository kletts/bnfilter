[{"path":"https://kletts.github.io/bnfilter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christian Klettner. Author, maintainer.","code":""},{"path":"https://kletts.github.io/bnfilter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Klettner C (2025). bnfilter: Beveridge Nelson Filter. R package version 0.1.0, https://kletts.github.io/bnfilter/.","code":"@Manual{,   title = {bnfilter: Beveridge Nelson Filter},   author = {Christian Klettner},   year = {2025},   note = {R package version 0.1.0},   url = {https://kletts.github.io/bnfilter/}, }"},{"path":"https://kletts.github.io/bnfilter/index.html","id":"beveridge-nelson-filter","dir":"","previous_headings":"","what":"Beveridge Nelson Filter","title":"Beveridge Nelson Filter","text":"package copy Beveridge-Nelson Filter R code available https://bnfiltering.com/ re-structured R package ease installation use. Function documentation examples available https://kletts.github.io/bnfilter/.","code":""},{"path":"https://kletts.github.io/bnfilter/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Beveridge Nelson Filter","text":"Install package R :","code":"remotes::install_github(\"kletts/bnfilter\")"},{"path":"https://kletts.github.io/bnfilter/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Beveridge Nelson Filter","text":"Data preparation, see function bnfilter::transform_series: apply series differencing Filtering: see function bnfilter::bnf() Plot cycle cycle confidence interval: see method plot() Extract original, trend, cycle cycle confidence interval: see method .data.frame()","code":""},{"path":"https://kletts.github.io/bnfilter/index.html","id":"notes-from-the-authors","dir":"","previous_headings":"","what":"Notes from the authors","title":"Beveridge Nelson Filter","text":"code calculates BN filter output gap automatic signal--noise selection criteria described Kamber, Morley Wong (2018) (KMW2018 hereafter), “Intuitive Reliable Estimates Output Gap Beveridge-Nelson Filter,” Review Economics Statistics 100 (3), 550-566 https://doi.org/10.1162/rest_a_00691 also updated allow refinements original BN filter, described Kamber, Morley Wong (2025) (KMW2025 hereafter), “Trend-Cycle Decomposition Presence Large Shocks,” Journal Economic Dynamics Control, https://doi.org/10.1016/j.jedc.2025.105066. allow possible structural breaks long-run drift time series, include options implement dynamic demeaning described KMW2018 enter breakdate(s) informed test Bai-Perron. also allow possibility imposing drift levels, might case variables like unemployment rate inflation. implement BN filter, one needs four inputs: data first differences series detrended, lag order restricted AR model used estimation, indicator whether iterative backcasting employed, signal--noise ratio delta. code modified October 2021 allow calculation error bands according formula online appendix BMW2018. proposed KMW2025, modified original code allow four refinements relative KMW2018: alternative automatic selection delta based local minimum variance trend shocks rather local maximum amplitude--noise ratio iterative dynamic mean adjustment uses estimates trend instead overall growth avoid undue influence outlier cyclical observations dynamic estimation BN cycle variance using window dynamic demeaning purposes constructing accurate 95% error bands option iterative backcasting (parameter estimates/backcasts converge) uses reversibility restricted AR process backcast output growth prior initial observation, allowing calculation BN filter cycle first observation levels instead second observation levels Options currently set estimate output gap quarterly U.S. real GDP sample period KMW2025 data(usdata-updated) using automatic selection delta based local minimum variance trend shocks iterative dynamic demeaning. currently reports error bands without correction Covid outliers. Options can modified replicate results original KMW2018 paper using data(usdata). responsible loss may incur, financial otherwise, using code use code, please cite acknowledge paper. Gunes Kamber James Morley Benjamin Wong February 2025","code":""},{"path":"https://kletts.github.io/bnfilter/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Beveridge Nelson Filter","text":"KMW2018: Kamber G, Morley J, Wong B (2018). “Intuitive Reliable Estimates Output Gap Beveridge-Nelson Filter.” Review Economics Statistics, 100(3), 550-566. ISSN 0034-6535. KMW2025: Kamber G, Morley J, Wong B (2025). “Trend-cycle decomposition presence large shocks.” Journal Economic Dynamics Control, 173, 105066. ISSN 0165-1889.","code":""},{"path":"https://kletts.github.io/bnfilter/reference/as.data.frame.bnfClass.html","id":null,"dir":"Reference","previous_headings":"","what":"As Data Frame — as.data.frame.bnfClass","title":"As Data Frame — as.data.frame.bnfClass","text":"Convert list object output data frame","code":""},{"path":"https://kletts.github.io/bnfilter/reference/as.data.frame.bnfClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As Data Frame — as.data.frame.bnfClass","text":"","code":"# S3 method for class 'bnfClass' as.data.frame(x)"},{"path":"https://kletts.github.io/bnfilter/reference/as.data.frame.bnfClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As Data Frame — as.data.frame.bnfClass","text":"x Object class bnfClass, output function bnf","code":""},{"path":"https://kletts.github.io/bnfilter/reference/as.data.frame.bnfClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"As Data Frame — as.data.frame.bnfClass","text":"data frame including: time, input y function bnf class ts y trend cycle cycle_se cycle_ci","code":""},{"path":"https://kletts.github.io/bnfilter/reference/audata.html","id":null,"dir":"Reference","previous_headings":"","what":"National Economic Indicators, Australia — audata","title":"National Economic Indicators, Australia — audata","text":"National Economic Indicators, Australia","code":""},{"path":"https://kletts.github.io/bnfilter/reference/audata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National Economic Indicators, Australia — audata","text":"","code":"audata"},{"path":[]},{"path":"https://kletts.github.io/bnfilter/reference/audata.html","id":"audata","dir":"Reference","previous_headings":"","what":"audata","title":"National Economic Indicators, Australia — audata","text":"data frame 262 rows 3 columns spanning: 1959-Q3 2024 Q4 date Observation quarter UNRATE Australian Unemployment Rate, persons seasonally adjusted, Series ID: GDPC1 Australian Gross Domestic Product, chain volume measure seasonally adjusted, $million, Series ID:","code":""},{"path":"https://kletts.github.io/bnfilter/reference/audata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"National Economic Indicators, Australia — audata","text":"https://abs.gov.au","code":""},{"path":"https://kletts.github.io/bnfilter/reference/bnf.html","id":null,"dir":"Reference","previous_headings":"","what":"Beveridge-Nelson Filter — bnf","title":"Beveridge-Nelson Filter — bnf","text":"Based Replication Files Kamber, Morley & Wong R conversion MATLAB codes originally written Ben Wong","code":""},{"path":"https://kletts.github.io/bnfilter/reference/bnf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beveridge-Nelson Filter — bnf","text":"","code":"bnf(   y,   delta_select = 2,   fixed_delta = 0.01,   p = 12,   d0 = 0.01,   dt = 5e-04,   demean = c(\"nd\", \"sm\", \"pm\", \"dm\"),   iterative = 100,   dynamic_bands = TRUE,   adjusted_bands = FALSE,   outliers = c(293, 294),   window = 40,   ib = TRUE,   ... )"},{"path":"https://kletts.github.io/bnfilter/reference/bnf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beveridge-Nelson Filter — bnf","text":"y vector, eg object type ts delta_select integer, set 0 use fixed delta, 1 max amp--noise, 2 min var(trend shocks) fixed_delta integer, set fixed delta used delta_select=0, delta p integer, lag order estimation d0 integer, min_delta: start point grid search delta delta_select!=0 dt integer, delta increment demean character, one \"nd\", \"sm\", \"dm\", \"pm\", \"nd\" = drift, \"sm\" = sample mean, \"dm\" = dynamic demeaning, \"pm\" = structural breaks, set 'breaks = c(100, 237)' iterative integer, set >1 max number iterations iterative dynamic demeaning dynamic_bands logical, set TRUE dynamic error bands, FALSE fixed standard error bands adjusted_bands logical, set TRUE adjusts outlier observations calculating error bands, outliers set outliers 'outliers = c(293, 294)' window rolling window length dynamic demeaning /dynamic error bands (e.g., 40 10 years quarterly data) ib logical, set FALSE iterative backcasting KMW2018 (just unconditional mean), set TRUE iterative backcasting ... passed error bands piecewise_demean function","code":""},{"path":"https://kletts.github.io/bnfilter/reference/bnf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beveridge-Nelson Filter — bnf","text":"List class \"bnf\" containing: call y cycle trend cycle_se: standard error delta demean_method iterative cycle_ci cycle_adjusted_se cycle_ci_adjusted iterations","code":""},{"path":"https://kletts.github.io/bnfilter/reference/bnf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beveridge-Nelson Filter — bnf","text":"Kamber G, Morley J, Wong B (2018). “Intuitive Reliable Estimates Output Gap Beveridge-Nelson Filter.” Review Economics Statistics, 100(3), 550-566. ISSN 0034-6535,. Kamber G, Morley J, Wong B (2025). “Trend-cycle decomposition presence large shocks.” Journal Economic Dynamics Control, 173, 105066. ISSN 0165-1889.","code":""},{"path":"https://kletts.github.io/bnfilter/reference/bnf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beveridge-Nelson Filter — bnf","text":"","code":"data(usdata) y <- transform_series(y = usdata$GDPC1, take_log = TRUE, pcode = \"p1\") bnfOutput <- bnf(as.vector(y),         delta_select = 2,         demean = \"dm\",         iterative = 100,         dynamic_bands = TRUE,         adjusted_bands = TRUE,         outliers = c(293, 294),         window = 40,         ib = TRUE)"},{"path":"https://kletts.github.io/bnfilter/reference/piecewise_demean.html","id":null,"dir":"Reference","previous_headings":"","what":"Piecewise Demean — piecewise_demean","title":"Piecewise Demean — piecewise_demean","text":"Demean relative break point(s) provided 'breaks'. values 'breaks' assumed ascending order.","code":""},{"path":"https://kletts.github.io/bnfilter/reference/piecewise_demean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Piecewise Demean — piecewise_demean","text":"","code":"piecewise_demean(y, breaks = c())"},{"path":"https://kletts.github.io/bnfilter/reference/piecewise_demean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Piecewise Demean — piecewise_demean","text":"y Numeric vector, time series, eg class ts breaks Numeric vector, break points observation indices, default c() includes breaks, full sample mean used instead","code":""},{"path":"https://kletts.github.io/bnfilter/reference/piecewise_demean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Piecewise Demean — piecewise_demean","text":"Numeric vector, length(y)","code":""},{"path":"https://kletts.github.io/bnfilter/reference/piecewise_demean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Piecewise Demean — piecewise_demean","text":"","code":"data(usdata) piecewise_demean(usdata$GDPC1, breaks=c(100,200)) #>               [,1] #>   [1,] -1295.58500 #>   [2,] -1297.78500 #>   [3,] -1299.78500 #>   [4,] -1269.38500 #>   [5,] -1240.58500 #>   [6,] -1208.18500 #>   [7,] -1196.88500 #>   [8,] -1194.78500 #>   [9,] -1222.58500 #>  [10,] -1229.28500 #>  [11,] -1207.28500 #>  [12,] -1225.38500 #>  [13,] -1145.48500 #>  [14,] -1082.48500 #>  [15,]  -999.68500 #>  [16,]  -956.68500 #>  [17,]  -925.58500 #>  [18,]  -885.58500 #>  [19,]  -837.28500 #>  [20,]  -831.98500 #>  [21,]  -806.58500 #>  [22,]  -801.58500 #>  [23,]  -783.98500 #>  [24,]  -703.68500 #>  [25,]  -656.68500 #>  [26,]  -636.58500 #>  [27,]  -651.18500 #>  [28,]  -690.28500 #>  [29,]  -702.08500 #>  [30,]  -699.38500 #>  [31,]  -670.68500 #>  [32,]  -620.78500 #>  [33,]  -546.28500 #>  [34,]  -502.58500 #>  [35,]  -465.98500 #>  [36,]  -449.28500 #>  [37,]  -460.08500 #>  [38,]  -437.18500 #>  [39,]  -439.48500 #>  [40,]  -393.88500 #>  [41,]  -375.58500 #>  [42,]  -381.88500 #>  [43,]  -354.18500 #>  [44,]  -383.68500 #>  [45,]  -457.38500 #>  [46,]  -439.18500 #>  [47,]  -374.58500 #>  [48,]  -307.78500 #>  [49,]  -253.48500 #>  [50,]  -181.08500 #>  [51,]  -186.98500 #>  [52,]  -174.98500 #>  [53,]  -106.88500 #>  [54,]  -118.78500 #>  [55,]  -110.98500 #>  [56,]  -148.78500 #>  [57,]  -127.78500 #>  [58,]   -70.18500 #>  [59,]   -17.48500 #>  [60,]    47.61500 #>  [61,]   106.71500 #>  [62,]   142.61500 #>  [63,]   174.71500 #>  [64,]   187.91500 #>  [65,]   226.01500 #>  [66,]   271.01500 #>  [67,]   339.41500 #>  [68,]   364.91500 #>  [69,]   442.61500 #>  [70,]   486.31500 #>  [71,]   536.81500 #>  [72,]   550.11500 #>  [73,]   643.41500 #>  [74,]   696.31500 #>  [75,]   776.11500 #>  [76,]   870.51500 #>  [77,]   971.81500 #>  [78,]   989.01500 #>  [79,]  1019.11500 #>  [80,]  1055.51500 #>  [81,]  1094.81500 #>  [82,]  1098.61500 #>  [83,]  1136.01500 #>  [84,]  1171.11500 #>  [85,]  1260.51500 #>  [86,]  1336.31500 #>  [87,]  1369.21500 #>  [88,]  1389.71500 #>  [89,]  1461.51500 #>  [90,]  1476.61500 #>  [91,]  1506.01500 #>  [92,]  1485.41500 #>  [93,]  1477.01500 #>  [94,]  1485.31500 #>  [95,]  1527.11500 #>  [96,]  1478.21500 #>  [97,]  1604.21500 #>  [98,]  1631.81500 #>  [99,]  1669.91500 #> [100,]  1684.21500 #> [101,] -2497.68300 #> [102,] -2381.78300 #> [103,] -2334.68300 #> [104,] -2248.88300 #> [105,] -2119.58300 #> [106,] -2058.58300 #> [107,] -2088.18300 #> [108,] -2037.68300 #> [109,] -2083.08300 #> [110,] -2068.78300 #> [111,] -2121.38300 #> [112,] -2142.88300 #> [113,] -2207.68300 #> [114,] -2166.88300 #> [115,] -2078.68300 #> [116,] -2005.68300 #> [117,] -1881.58300 #> [118,] -1839.08300 #> [119,] -1810.28300 #> [120,] -1767.58300 #> [121,] -1700.88300 #> [122,] -1587.08300 #> [123,] -1482.48300 #> [124,] -1481.88300 #> [125,] -1460.88300 #> [126,] -1226.08300 #> [127,] -1164.78300 #> [128,] -1079.78300 #> [129,] -1067.08300 #> [130,] -1059.28300 #> [131,] -1012.98300 #> [132,]  -996.18300 #> [133,]  -975.18300 #> [134,] -1107.48300 #> [135,] -1117.18300 #> [136,]  -998.88300 #> [137,]  -864.38300 #> [138,]  -912.78300 #> [139,]  -837.18300 #> [140,]  -914.98300 #> [141,] -1025.08300 #> [142,]  -989.88300 #> [143,] -1013.28300 #> [144,] -1006.98300 #> [145,]  -921.88300 #> [146,]  -771.78300 #> [147,]  -640.08300 #> [148,]  -498.58300 #> [149,]  -359.48300 #> [150,]  -234.08300 #> [151,]  -162.58300 #> [152,]  -104.08300 #> [153,]   -30.58300 #> [154,]    37.81700 #> [155,]   155.11700 #> [156,]   212.51700 #> [157,]   284.01700 #> [158,]   319.71700 #> [159,]   398.51700 #> [160,]   439.41700 #> [161,]   494.91700 #> [162,]   584.61700 #> [163,]   657.91700 #> [164,]   792.61700 #> [165,]   839.21700 #> [166,]   949.41700 #> [167,]   998.21700 #> [168,]  1110.81700 #> [169,]  1197.61700 #> [170,]  1266.01700 #> [171,]  1331.41700 #> [172,]  1350.11700 #> [173,]  1447.01700 #> [174,]  1481.61700 #> [175,]  1483.81700 #> [176,]  1407.31700 #> [177,]  1365.51700 #> [178,]  1434.31700 #> [179,]  1477.21700 #> [180,]  1516.31700 #> [181,]  1622.91700 #> [182,]  1723.41700 #> [183,]  1813.11700 #> [184,]  1906.41700 #> [185,]  1924.01700 #> [186,]  1980.01700 #> [187,]  2026.21700 #> [188,]  2153.41700 #> [189,]  2248.11700 #> [190,]  2381.31700 #> [191,]  2439.61700 #> [192,]  2552.41700 #> [193,]  2586.81700 #> [194,]  2622.01700 #> [195,]  2708.71700 #> [196,]  2781.11700 #> [197,]  2848.61700 #> [198,]  3029.31700 #> [199,]  3126.71700 #> [200,]  3239.01700 #> [201,] -3241.52179 #> [202,] -3078.22179 #> [203,] -2938.42179 #> [204,] -2852.12179 #> [205,] -2741.22179 #> [206,] -2631.42179 #> [207,] -2481.82179 #> [208,] -2291.72179 #> [209,] -2197.72179 #> [210,] -2099.92179 #> [211,] -1949.32179 #> [212,] -1739.12179 #> [213,] -1703.32179 #> [214,] -1469.92179 #> [215,] -1454.72179 #> [216,] -1383.12179 #> [217,] -1419.12179 #> [218,] -1352.12179 #> [219,] -1392.32179 #> [220,] -1357.12179 #> [221,] -1240.12179 #> [222,] -1169.42179 #> [223,] -1106.62179 #> [224,] -1098.42179 #> [225,] -1031.22179 #> [226,]  -910.32179 #> [227,]  -690.02179 #> [228,]  -533.72179 #> [229,]  -455.92179 #> [230,]  -356.22179 #> [231,]  -231.62179 #> [232,]  -112.02179 #> [233,]    36.67821 #> [234,]   110.27821 #> [235,]   229.37821 #> [236,]   310.97821 #> [237,]   483.67821 #> [238,]   527.17821 #> [239,]   540.17821 #> [240,]   654.47821 #> [241,]   663.57821 #> [242,]   776.27821 #> [243,]   876.07821 #> [244,]   929.37821 #> [245,]   827.07821 #> [246,]   900.97821 #> [247,]   829.17821 #> [248,]   514.57821 #> [249,]   312.57821 #> [250,]   293.17821 #> [251,]   340.07821 #> [252,]   479.47821 #> [253,]   542.37821 #> [254,]   683.47821 #> [255,]   783.07821 #> [256,]   876.57821 #> [257,]   818.87821 #> [258,]   927.17821 #> [259,]   958.67821 #> [260,]  1127.87821 #> [261,]  1228.57821 #> [262,]  1299.97821 #> [263,]  1318.37821 #> [264,]  1321.87821 #> [265,]  1429.47821 #> [266,]  1459.17821 #> [267,]  1578.87821 #> [268,]  1731.47821 #> [269,]  1684.57821 #> [270,]  1838.37821 #> [271,]  2032.07821 #> [272,]  2124.27821 #> [273,]  2206.57821 #> [274,]  2311.77821 #> [275,]  2392.47821 #> [276,]  2428.27821 #> [277,]  2462.57821 #> [278,]  2507.77821"},{"path":"https://kletts.github.io/bnfilter/reference/plot.bnfClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot.bnfClass","title":"Plot — plot.bnfClass","text":"Plot method object class \"bnf\"","code":""},{"path":"https://kletts.github.io/bnfilter/reference/plot.bnfClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot.bnfClass","text":"","code":"# S3 method for class 'bnfClass' plot(   x,   main = \"BN Filter Cycle\",   plot_ci = TRUE,   col = \"red\",   secondary_col = \"blue\",   lwd = 2,   ... )"},{"path":"https://kletts.github.io/bnfilter/reference/plot.bnfClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot.bnfClass","text":"x object class \"bnf\" output bnf main character, plot title plot_ci logical, include cycle confidence interval col character, primary color hexcode secondary_col character, secondary color hexcode lwd numeric, line width ... arguments, used","code":""},{"path":"https://kletts.github.io/bnfilter/reference/plot.bnfClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot — plot.bnfClass","text":"plot","code":""},{"path":"https://kletts.github.io/bnfilter/reference/plot.bnfClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot — plot.bnfClass","text":"","code":"data(usdata) y <- transform_series(y = usdata$GDPC1, take_log = TRUE, pcode = \"p1\") bnfOutput <- bnf(as.vector(y),         delta_select = 2,         demean = \"dm\",         iterative = 100,         dynamic_bands = TRUE,         adjusted_bands = TRUE,         outliers = c(293, 294),         window = 40,         ib = TRUE) plot(bnfOutput, main=\"US Output Gap\") #> Warning: data length differs from size of matrix: [2 != 1 x 1]"},{"path":"https://kletts.github.io/bnfilter/reference/print.bnfClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Print — print.bnfClass","title":"Print — print.bnfClass","text":"Print method class \"bnf\"","code":""},{"path":"https://kletts.github.io/bnfilter/reference/print.bnfClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print — print.bnfClass","text":"","code":"# S3 method for class 'bnfClass' print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"https://kletts.github.io/bnfilter/reference/print.bnfClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print — print.bnfClass","text":"x object class bnf output bnf digits integer, significant digits print, default getOption(\"digits\") - 3 ... arguments, used","code":""},{"path":"https://kletts.github.io/bnfilter/reference/print.bnfClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print — print.bnfClass","text":"Nothing","code":""},{"path":"https://kletts.github.io/bnfilter/reference/print.bnfClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print — print.bnfClass","text":"","code":"data(usdata) y <- transform_series(y = usdata$GDPC1, take_log = TRUE, pcode = \"p1\") bnfOutput <- bnf(as.vector(y),         delta_select = 2,         demean = \"dm\",         iterative = 100,         dynamic_bands = TRUE,         adjusted_bands = TRUE,         outliers = c(293, 294),         window = 40,         ib = TRUE) print(bnfOutput) #>  #> Call: bnf(y = as.vector(y), delta_select = 2, demean = \"dm\", iterative = 100,  #>     dynamic_bands = TRUE, adjusted_bands = TRUE, outliers = c(293,  #>         294), window = 40, ib = TRUE) #>  #> \tIntuitive and Reliable Estimates of the Output Gap from a Beveridge-Nelson Filter #>  #> Automatic Delta: 0.0295 #>  #> Demean method: Rolling mean #>  #> Iterations: 5 #>  #> Cycle: #>               Cycle #>   [1,]  1.552784582 #>   [2,]  0.338539117 #>   [3,] -0.639605644 #>   [4,] -0.102530858 #>   [5,]  0.222439619 #>   [6,]  0.629243242 #>   [7,]  0.130316074 #>   [8,] -0.645510563 #>   [9,] -2.564356334 #>  [10,] -3.266651100 #>  [11,] -2.641808339 #>  [12,] -3.762315854 #>  [13,] -0.671348367 #>  [14,]  1.192172186 #>  [15,]  3.471761133 #>  [16,]  3.761626817 #>  [17,]  3.507640555 #>  [18,]  3.427290460 #>  [19,]  3.510466824 #>  [20,]  2.034382316 #>  [21,]  1.503712282 #>  [22,]  0.315903107 #>  [23,] -0.209924632 #>  [24,]  1.536494071 #>  [25,]  1.826266266 #>  [26,]  1.262739300 #>  [27,] -0.326754990 #>  [28,] -2.424927761 #>  [29,] -3.317680121 #>  [30,] -3.585564868 #>  [31,] -2.904732518 #>  [32,] -1.590239008 #>  [33,]  0.294995588 #>  [34,]  0.936264346 #>  [35,]  1.238481396 #>  [36,]  0.771718346 #>  [37,] -0.515408405 #>  [38,] -0.649332612 #>  [39,] -1.534634291 #>  [40,] -0.820580416 #>  [41,] -1.033030887 #>  [42,] -1.839643978 #>  [43,] -1.497030259 #>  [44,] -2.860933982 #>  [45,] -5.270880938 #>  [46,] -4.505537538 #>  [47,] -2.513471453 #>  [48,] -0.775803387 #>  [49,]  0.377577027 #>  [50,]  1.798463165 #>  [51,]  0.734372256 #>  [52,]  0.232245184 #>  [53,]  1.249500426 #>  [54,] -0.133130627 #>  [55,] -0.792816516 #>  [56,] -2.488094412 #>  [57,] -2.224015217 #>  [58,] -1.066076787 #>  [59,] -0.157368798 #>  [60,]  0.968548002 #>  [61,]  1.721547994 #>  [62,]  1.723406784 #>  [63,]  1.632924645 #>  [64,]  1.033710027 #>  [65,]  1.045781035 #>  [66,]  1.201052453 #>  [67,]  1.859409663 #>  [68,]  1.432238054 #>  [69,]  2.241058468 #>  [70,]  2.068138925 #>  [71,]  2.058693440 #>  [72,]  1.187150891 #>  [73,]  2.174815340 #>  [74,]  2.052398886 #>  [75,]  2.515263667 #>  [76,]  3.168558805 #>  [77,]  3.766520253 #>  [78,]  2.539569374 #>  [79,]  1.757240881 #>  [80,]  1.196144346 #>  [81,]  0.711744185 #>  [82,] -0.346577403 #>  [83,] -0.532310907 #>  [84,] -0.713075966 #>  [85,]  0.119922247 #>  [86,]  0.582000708 #>  [87,]  0.192589000 #>  [88,] -0.386795658 #>  [89,] -0.002882082 #>  [90,] -0.688584172 #>  [91,] -1.000831706 #>  [92,] -2.139798873 #>  [93,] -2.851703804 #>  [94,] -3.116885045 #>  [95,] -2.696115573 #>  [96,] -3.877911454 #>  [97,] -1.793302136 #>  [98,] -1.787789432 #>  [99,] -1.532593238 #> [100,] -1.729314414 #> [101,] -0.696361124 #> [102,]  0.527083967 #> [103,]  0.391638626 #> [104,]  0.912576434 #> [105,]  1.909482826 #> [106,]  1.592646586 #> [107,] -0.052632009 #> [108,] -0.174375137 #> [109,] -1.860348306 #> [110,] -2.284509675 #> [111,] -3.591620738 #> [112,] -4.089600983 #> [113,] -5.152157575 #> [114,] -4.276691768 #> [115,] -2.716646319 #> [116,] -1.609580246 #> [117,]  0.089678271 #> [118,]  0.289673582 #> [119,]  0.242534824 #> [120,]  0.302081402 #> [121,]  0.659964800 #> [122,]  1.521771982 #> [123,]  2.068930868 #> [124,]  1.078996823 #> [125,]  0.559072157 #> [126,]  2.934775289 #> [127,]  2.510690493 #> [128,]  2.508334187 #> [129,]  1.522159736 #> [130,]  0.624906200 #> [131,]  0.332150499 #> [132,] -0.248140212 #> [133,] -0.650105435 #> [134,] -2.964262084 #> [135,] -3.239790361 #> [136,] -1.763850224 #> [137,] -0.314436314 #> [138,] -1.396400232 #> [139,] -0.647272262 #> [140,] -2.026784468 #> [141,] -3.576159537 #> [142,] -2.996683348 #> [143,] -3.265458118 #> [144,] -3.076555165 #> [145,] -1.846765591 #> [146,]  0.094923735 #> [147,]  1.417624944 #> [148,]  2.572883549 #> [149,]  3.415077534 #> [150,]  3.840024558 #> [151,]  3.407553949 #> [152,]  2.853641578 #> [153,]  2.461266176 #> [154,]  1.962968941 #> [155,]  2.084544144 #> [156,]  1.535069204 #> [157,]  1.235847571 #> [158,]  0.597053915 #> [159,]  0.546399388 #> [160,]  0.106206076 #> [161,] -0.084840773 #> [162,]  0.120372203 #> [163,]  0.144489588 #> [164,]  0.798554384 #> [165,]  0.455781294 #> [166,]  0.816668115 #> [167,]  0.474248951 #> [168,]  0.822865412 #> [169,]  0.833118837 #> [170,]  0.672330123 #> [171,]  0.490976011 #> [172,] -0.094157691 #> [173,]  0.147889553 #> [174,] -0.252069298 #> [175,] -0.865114497 #> [176,] -2.106934081 #> [177,] -2.777363229 #> [178,] -2.307001327 #> [179,] -2.109977902 #> [180,] -1.936412643 #> [181,] -1.158596938 #> [182,] -0.591314723 #> [183,] -0.240791081 #> [184,]  0.058897549 #> [185,] -0.431169040 #> [186,] -0.553245066 #> [187,] -0.774303914 #> [188,] -0.240860929 #> [189,] -0.093447889 #> [190,]  0.354668466 #> [191,]  0.112337690 #> [192,]  0.374876838 #> [193,] -0.077795379 #> [194,] -0.433772287 #> [195,] -0.315196401 #> [196,] -0.335117628 #> [197,] -0.357539273 #> [198,]  0.534107234 #> [199,]  0.614756840 #> [200,]  0.787509369 #> [201,]  0.684096627 #> [202,]  1.186581366 #> [203,]  1.379019448 #> [204,]  1.118934122 #> [205,]  1.084689315 #> [206,]  1.011813134 #> [207,]  1.210078879 #> [208,]  1.655651931 #> [209,]  1.343038749 #> [210,]  1.082820270 #> [211,]  1.219395669 #> [212,]  1.707262652 #> [213,]  0.929484901 #> [214,]  1.590588124 #> [215,]  0.656312527 #> [216,]  0.259618066 #> [217,] -0.792332369 #> [218,] -0.971477425 #> [219,] -1.841839610 #> [220,] -2.035359047 #> [221,] -1.614619941 #> [222,] -1.536393817 #> [223,] -1.490578513 #> [224,] -1.778045194 #> [225,] -1.614931835 #> [226,] -1.192671635 #> [227,] -0.200666207 #> [228,]  0.197400672 #> [229,]  0.048035105 #> [230,]  0.020051486 #> [231,]  0.125301719 #> [232,]  0.143388152 #> [233,]  0.302527623 #> [234,] -0.018756153 #> [235,] -0.030239015 #> [236,] -0.255679051 #> [237,]  0.084588623 #> [238,] -0.380284642 #> [239,] -0.935335474 #> [240,] -0.815663022 #> [241,] -1.297172592 #> [242,] -1.086241907 #> [243,] -0.966893421 #> [244,] -1.099388487 #> [245,] -2.057294446 #> [246,] -1.832477342 #> [247,] -2.452747556 #> [248,] -4.286637097 #> [249,] -5.146500125 #> [250,] -4.762435735 #> [251,] -4.004246451 #> [252,] -2.748450558 #> [253,] -2.040329114 #> [254,] -1.004174871 #> [255,] -0.408992933 #> [256,]  0.044821512 #> [257,] -0.455302080 #> [258,] -0.038508246 #> [259,] -0.171601644 #> [260,]  0.494136802 #> [261,]  0.653131933 #> [262,]  0.620252958 #> [263,]  0.286466475 #> [264,] -0.085344919 #> [265,]  0.165580717 #> [266,] -0.063839862 #> [267,]  0.245031015 #> [268,]  0.674793096 #> [269,]  0.014819855 #> [270,]  0.520730160 #> [271,]  1.134785951 #> [272,]  1.099661098 #> [273,]  1.027666893 #> [274,]  1.081764492 #> [275,]  0.982048812 #> [276,]  0.666651075 #> [277,]  0.411155682 #> [278,]  0.262381738"},{"path":"https://kletts.github.io/bnfilter/reference/transform_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Series — transform_series","title":"Transform Series — transform_series","text":"Returns suitably transformed, lagged /differenced data. Inspired GAUSS procs originally written Mark Watson.","code":""},{"path":"https://kletts.github.io/bnfilter/reference/transform_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Series — transform_series","text":"","code":"transform_series(   y,   take_log = FALSE,   dcode = c(\"nd\", \"d1\", \"d4\", \"d12\"),   pcode = c(\"np\", \"p1\", \"p4\", \"p12\") )"},{"path":"https://kletts.github.io/bnfilter/reference/transform_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Series — transform_series","text":"y numeric vector, input time series, eg class ts take_log logical, take natural logarithm? Default (FALSE) dcode character option specify y differenced: \"nd\", difference, .e., level, default \"d1\", 1st Difference, .e., (1 - B)y \"d4\", 4th Difference, .e., (1 - B^4)y, use quarterly data \"d12\", 12th Difference, .e., (1 - B^12)y, use monthly data pcode character, option specify percentages computed: \"np\", change, default \"p1\", multiply 100 \"p4\", multiply 400, eg. annualized quarterly rate \"p12\", multiply 1200, eg. annualized monthly rate","code":""},{"path":"https://kletts.github.io/bnfilter/reference/transform_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Series — transform_series","text":"vector transformed, class x class ts, class ts","code":""},{"path":"https://kletts.github.io/bnfilter/reference/transform_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Series — transform_series","text":"","code":"data(usdata) head(transform_series(usdata$GDPC1, TRUE, \"d4\", \"p4\")) #>           [,1] #> [1,] 11.213782 #> [2,] 18.130664 #> [3,] 20.774190 #> [4,] 14.936670 #> [5,]  3.602726 #> [6,] -4.196225"},{"path":"https://kletts.github.io/bnfilter/reference/usdata.html","id":null,"dir":"Reference","previous_headings":"","what":"National Economic Indicators, United States — usdata","title":"National Economic Indicators, United States — usdata","text":"National Economic Indicators, United States","code":""},{"path":"https://kletts.github.io/bnfilter/reference/usdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National Economic Indicators, United States — usdata","text":"","code":"usdata"},{"path":[]},{"path":"https://kletts.github.io/bnfilter/reference/usdata.html","id":"usdata","dir":"Reference","previous_headings":"","what":"usdata","title":"National Economic Indicators, United States — usdata","text":"data frame 278 rows 5 columns spanning: 1947 Q1 2016 Q4. original dataset GMW2018. DATE Observation quarter UNRATE  GDPC1  cpiaucsl  GDPDEF  UNRATE","code":""},{"path":"https://kletts.github.io/bnfilter/reference/usdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"National Economic Indicators, United States — usdata","text":"https://bnfiltering.com/","code":""},{"path":"https://kletts.github.io/bnfilter/reference/usgdp.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Gross Domestic Product — usgdp","title":"United States Gross Domestic Product — usgdp","text":"United States Gross Domestic Product","code":""},{"path":"https://kletts.github.io/bnfilter/reference/usgdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Gross Domestic Product — usgdp","text":"","code":"usgdp"},{"path":[]},{"path":"https://kletts.github.io/bnfilter/reference/usgdp.html","id":"usgdp","dir":"Reference","previous_headings":"","what":"usgdp","title":"United States Gross Domestic Product — usgdp","text":"time series object length 305 spanning 1947 Q1 2023 Q4","code":""},{"path":"https://kletts.github.io/bnfilter/reference/usgdp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States Gross Domestic Product — usgdp","text":"https://bnfiltering.com/","code":""}]
